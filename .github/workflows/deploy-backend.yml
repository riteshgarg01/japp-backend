name: Deploy Backend

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID || '' }}
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY || 'japp-backend' }}
  APP_RUNNER_SERVICE_ARN: ${{ vars.APP_RUNNER_SERVICE_ARN || '' }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Compute image URI
        id: prep
        run: |
          if [ -z "$AWS_ACCOUNT_ID" ]; then echo "Missing env var AWS_ACCOUNT_ID"; exit 1; fi
          if [ -z "$APP_RUNNER_SERVICE_ARN" ]; then echo "Missing env var APP_RUNNER_SERVICE_ARN"; exit 1; fi
          IMAGE_TAG=${GITHUB_SHA}
          ECR_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${IMAGE_TAG}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "ECR_URI=$ECR_URI" >> $GITHUB_OUTPUT

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "$ECR_REPOSITORY" >/dev/null

      - name: Build and push
        run: |
          docker build -t ${{ steps.prep.outputs.ECR_URI }} .
          docker push ${{ steps.prep.outputs.ECR_URI }}

      - name: Update App Runner service
        run: |
          cat > source.json <<JSON
          {
            "ImageRepository": {
              "ImageIdentifier": "${{ steps.prep.outputs.ECR_URI }}",
              "ImageRepositoryType": "ECR"
            },
            "AutoDeploymentsEnabled": true
          }
          JSON
          aws apprunner update-service \
            --service-arn "$APP_RUNNER_SERVICE_ARN" \
            --source-configuration file://source.json

